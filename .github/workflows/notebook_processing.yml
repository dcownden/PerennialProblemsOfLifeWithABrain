name: notebook_processing

on: 
  push:
    branches: [ "main" ]
    paths: 
      - 'sequences/**.ipynb'
      - '.github/workflows/notebook_processing.yml'
  pull_request:
    branches: [ "main" ]
    paths: 
      - 'sequences/**.ipynb'
      - '.github/workflows/notebook_processing.yml'
  workflow_dispatch:

env:
  NB_KERNEL: python
  PPLWB_REPO: PerrenialProblemsOfLifeWithABrain
  PPLWB_MAIN_BRANCH: main

jobs:

  process-notebooks:

    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get commit message
        run: |
          readonly local msg=$(git log -1 --pretty=format:"%s")
          echo "COMMIT_MESSAGE=$msg" >> $GITHUB_ENV

      - name: Set up ffmpeg
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        uses: actions/setup-ffmpeg@v2

      - name: Set up Python
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

      - name: Install XKCD fonts
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          sudo apt-get update -yq
          wget http://archive.ubuntu.com/ubuntu/pool/universe/f/fonts-humor-sans/fonts-humor-sans_1.0-4_all.deb
          sudo dpkg -i --force-all fonts-humor-sans_1.0-4_all.deb <<< 'yes'
          sudo apt install -fy
          rm -f $HOME/.matplotlib/fontList.cache

      - name: Get changed files
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        id: changed-files
        uses: tj-actions/changed-files@v35
        
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed."
          done

      - name: Process notebooks on pull request
        if: ${{ !contains(env.COMMIT_MESSAGE, 'skip ci') && github.event_name == 'pull_request' }}
        id: process_notebooks_pr
        run: |
          branch=${GITHUB_HEAD_REF}
          nbs=`python ci_scripts/select_notebooks.py ${{ steps.changed-files.outputs.all_changed_files }}`
          if ${{ contains(env.COMMIT_MESSAGE, 'ci:check') }}; then
            execflag="--check-execution";
          else
            execflag="--execute";
          fi
          python ci_scripts/process_notebooks.py $nbs $execflag
          python ci_scripts/verify_exercises.py $nbs --c "$COMMIT_MESSAGE"
          python ci_scripts/make_pr_comment.py $nbs --branch $branch --o comment.txt

      - name: Process notebooks on push
        if: ${{ !contains(env.COMMIT_MESSAGE, 'skip ci') && github.event_name == 'push' }}
        id: process_notebooks_push
        run: | 
          branch=${GITHUB_REF}}
          nbs=`python ci_scripts/select_notebooks.py ${{ steps.changed-files.outputs.all_changed_files }}`
          if ${{ contains(env.COMMIT_MESSAGE, 'ci:check') }}; then
            execflag="--check-execution";
          else
            execflag="--execute";
          fi
          python ci_scripts/process_notebooks.py $nbs $execflag
          python ci_scripts/verify_exercises.py $nbs --c "$COMMIT_MESSAGE"
          python ci_scripts/make_pr_comment.py $nbs --branch $branch --o comment.txt

      - name: Add PR/Push comment
        if: ${{ !contains(env.COMMIT_MESSAGE, 'skip ci') && (github.event_name == 'pull_request' || github.event_name == 'pull_request') }}
        uses: machine-learning-apps/pr-comment@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: comment.txt

      - name: Update READMEs
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: python ci_scripts/generate_sequence_directory_readmes.py

      - name: Remove unreferenced derivatives
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        run: |
          python ci_scripts/find_unreferenced_content.py > to_remove.txt
          if [ -s to_remove.txt ]; then git rm --pathspec-from-file=to_remove.txt; fi

      - name: Commit post-processed files
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add '**/*.ipynb'
          git add '**/static/*.png'
          git add '**/solutions/*.py'
          git add '**/README.md'
          git diff-index --quiet HEAD || git commit -m "Process sequence notebooks"

      - name: Push post-processed files
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
