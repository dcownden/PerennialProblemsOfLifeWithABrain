name: notebook_processing

on: 
  workflow_dispatch:

env:
  NB_KERNEL: python
  PPLWB_REPO: PerennialProblemsOfLifeWithABrain
  PPLWB_MAIN_BRANCH: main

jobs:

  process-notebooks:

    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: true
          persist-credentials: false
          fetch-depth: 2
          ref: ${{ github.head_ref }}

      - name: Get commit message
        run: |
          readonly local msg=$(git log -1 --pretty=format:"%s")
          echo "COMMIT_MESSAGE=$msg" >> $GITHUB_ENV

      - name: Set up ffmpeg
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -yq libgraphviz-dev
      
      - name: Set up Python
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.12
          cache: 'pip'

      - name: Install dependencies
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r CI_requirements.txt

      - name: Install CPU-only PyTorch
        run: |
          pip install torch==2.0.1 -f https://download.pytorch.org/whl/cpu/torch_stable.html
          echo "Installed packages:"
          pip freeze

      - name: Install XKCD fonts
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          sudo apt-get update -yq
          wget http://archive.ubuntu.com/ubuntu/pool/universe/f/fonts-humor-sans/fonts-humor-sans_1.0-4_all.deb
          sudo dpkg -i --force-all fonts-humor-sans_1.0-4_all.deb <<< 'yes'
          sudo apt install -fy
          rm -f $HOME/.matplotlib/fontList.cache

      - name: Find all sequence Notebooks
        id: find-notebooks
        run: |
          echo "notebook_files=$(find . -name '*.ipynb' -print0 | xargs -0 echo)" >> $GITHUB_ENV

      - name: Process notebooks on pull request
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: |
          nbs="${{ env.notebook_files }}"
          execflag="--check-execution";
          python ci_scripts/process_notebooks.py $nbs --check-execution
          python ci_scripts/verify_exercises.py $nbs --c "$COMMIT_MESSAGE"
          python ci_scripts/make_pr_Chad comment.py $nbs --branch ${{ github.head_ref }} --o comment.txt

      - name: Update READMEs
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
        run: python ci_scripts/generate_sequence_directory_readmes.py

      - name: Remove unreferenced derivatives
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        run: |
          python ci_scripts/find_unreferenced_content.py > to_remove.txt
          if [ -s to_remove.txt ]; then git rm --pathspec-from-file=to_remove.txt; fi

      - name: Commit post-processed files
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add '**/*.ipynb'
          git add '**/static/*.png'
          git add '**/solutions/*.py'
          git add '**/README.md'
          git diff-index --quiet HEAD || git commit -m "Process sequence notebooks"

      - name: Push post-processed files
        if: "!contains(env.COMMIT_MESSAGE, 'skip ci') && success()"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          force: true
